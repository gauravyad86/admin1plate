{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { captureException, showReportDialog, withScope } from '@sentry/browser';\nimport { logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { IS_DEBUG_BUILD } from './flags';\nexport function isAtLeastReact17(version) {\n  var major = version.match(/^([^.]+)/);\n  return major !== null && parseInt(major[0]) >= 17;\n}\nexport var UNKNOWN_COMPONENT = 'unknown';\nvar INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null\n};\n/**\n * A ErrorBoundary component that logs errors to Sentry. Requires React >= 16.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nvar ErrorBoundary = /** @class */function (_super) {\n  __extends(ErrorBoundary, _super);\n  function ErrorBoundary() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = INITIAL_STATE;\n    _this.resetErrorBoundary = function () {\n      var onReset = _this.props.onReset;\n      var _a = _this.state,\n        error = _a.error,\n        componentStack = _a.componentStack,\n        eventId = _a.eventId;\n      if (onReset) {\n        onReset(error, componentStack, eventId);\n      }\n      _this.setState(INITIAL_STATE);\n    };\n    return _this;\n  }\n  ErrorBoundary.prototype.componentDidCatch = function (error, _a) {\n    var _this = this;\n    var componentStack = _a.componentStack;\n    var _b = this.props,\n      beforeCapture = _b.beforeCapture,\n      onError = _b.onError,\n      showDialog = _b.showDialog,\n      dialogOptions = _b.dialogOptions;\n    withScope(function (scope) {\n      // If on React version >= 17, create stack trace from componentStack param and links\n      // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n      // Linking errors requires the `LinkedErrors` integration be enabled.\n      if (isAtLeastReact17(React.version)) {\n        var errorBoundaryError = new Error(error.message);\n        errorBoundaryError.name = \"React ErrorBoundary \" + errorBoundaryError.name;\n        errorBoundaryError.stack = componentStack;\n        // Using the `LinkedErrors` integration to link the errors together.\n        error.cause = errorBoundaryError;\n      }\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n      var eventId = captureException(error, {\n        contexts: {\n          react: {\n            componentStack: componentStack\n          }\n        }\n      });\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        showReportDialog(__assign(__assign({}, dialogOptions), {\n          eventId: eventId\n        }));\n      }\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      _this.setState({\n        error: error,\n        componentStack: componentStack,\n        eventId: eventId\n      });\n    });\n  };\n  ErrorBoundary.prototype.componentDidMount = function () {\n    var onMount = this.props.onMount;\n    if (onMount) {\n      onMount();\n    }\n  };\n  ErrorBoundary.prototype.componentWillUnmount = function () {\n    var _a = this.state,\n      error = _a.error,\n      componentStack = _a.componentStack,\n      eventId = _a.eventId;\n    var onUnmount = this.props.onUnmount;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n  };\n  ErrorBoundary.prototype.render = function () {\n    var _a = this.props,\n      fallback = _a.fallback,\n      children = _a.children;\n    var _b = this.state,\n      error = _b.error,\n      componentStack = _b.componentStack,\n      eventId = _b.eventId;\n    if (error) {\n      var element = undefined;\n      if (typeof fallback === 'function') {\n        element = fallback({\n          error: error,\n          componentStack: componentStack,\n          resetError: this.resetErrorBoundary,\n          eventId: eventId\n        });\n      } else {\n        element = fallback;\n      }\n      if (React.isValidElement(element)) {\n        return element;\n      }\n      if (fallback) {\n        IS_DEBUG_BUILD && logger.warn('fallback did not produce a valid ReactElement');\n      }\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n    if (typeof children === 'function') {\n      return children();\n    }\n    return children;\n  };\n  return ErrorBoundary;\n}(React.Component);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(WrappedComponent, errorBoundaryOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  var componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n  var Wrapped = function (props) {\n    return React.createElement(ErrorBoundary, __assign({}, errorBoundaryOptions), React.createElement(WrappedComponent, __assign({}, props)));\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  Wrapped.displayName = \"errorBoundary(\" + componentDisplayName + \")\";\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\nexport { ErrorBoundary, withErrorBoundary };","map":{"version":3,"names":["captureException","showReportDialog","withScope","logger","hoistNonReactStatics","React","IS_DEBUG_BUILD","isAtLeastReact17","version","major","match","parseInt","UNKNOWN_COMPONENT","INITIAL_STATE","componentStack","error","eventId","ErrorBoundary","_super","__extends","_this","apply","arguments","state","resetErrorBoundary","onReset","props","_a","setState","prototype","componentDidCatch","_b","beforeCapture","onError","showDialog","dialogOptions","scope","errorBoundaryError","Error","message","name","stack","cause","contexts","react","__assign","componentDidMount","onMount","componentWillUnmount","onUnmount","render","fallback","children","element","undefined","resetError","isValidElement","warn","Component","withErrorBoundary","WrappedComponent","errorBoundaryOptions","componentDisplayName","displayName","Wrapped","createElement"],"sources":["../../src/errorboundary.tsx"],"sourcesContent":["import { captureException, ReportDialogOptions, Scope, showReportDialog, withScope } from '@sentry/browser';\nimport { logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport { IS_DEBUG_BUILD } from './flags';\n\nexport function isAtLeastReact17(version: string): boolean {\n  const major = version.match(/^([^.]+)/);\n  return major !== null && parseInt(major[0]) >= 17;\n}\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type FallbackRender = (errorData: {\n  error: Error;\n  componentStack: string | null;\n  eventId: string | null;\n  resetError(): void;\n}) => React.ReactElement;\n\nexport type ErrorBoundaryProps = {\n  children?: React.ReactNode | (() => React.ReactNode);\n  /** If a Sentry report dialog should be rendered on error */\n  showDialog?: boolean;\n  /**\n   * Options to be passed into the Sentry report dialog.\n   * No-op if {@link showDialog} is false.\n   */\n  dialogOptions?: ReportDialogOptions;\n  /**\n   * A fallback component that gets rendered when the error boundary encounters an error.\n   *\n   * Can either provide a React Component, or a function that returns React Component as\n   * a valid fallback prop. If a function is provided, the function will be called with\n   * the error, the component stack, and an function that resets the error boundary on error.\n   *\n   */\n  fallback?: React.ReactElement | FallbackRender;\n  /** Called when the error boundary encounters an error */\n  onError?(error: Error, componentStack: string, eventId: string): void;\n  /** Called on componentDidMount() */\n  onMount?(): void;\n  /** Called if resetError() is called from the fallback render props function  */\n  onReset?(error: Error | null, componentStack: string | null, eventId: string | null): void;\n  /** Called on componentWillUnmount() */\n  onUnmount?(error: Error | null, componentStack: string | null, eventId: string | null): void;\n  /** Called before the error is captured by Sentry, allows for you to add tags or context using the scope */\n  beforeCapture?(scope: Scope, error: Error | null, componentStack: string | null): void;\n};\n\ntype ErrorBoundaryState = {\n  componentStack: React.ErrorInfo['componentStack'] | null;\n  error: Error | null;\n  eventId: string | null;\n};\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\n/**\n * A ErrorBoundary component that logs errors to Sentry. Requires React >= 16.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState = INITIAL_STATE;\n\n  public componentDidCatch(error: Error & { cause?: Error }, { componentStack }: React.ErrorInfo): void {\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n\n    withScope(scope => {\n      // If on React version >= 17, create stack trace from componentStack param and links\n      // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n      // Linking errors requires the `LinkedErrors` integration be enabled.\n      if (isAtLeastReact17(React.version)) {\n        const errorBoundaryError = new Error(error.message);\n        errorBoundaryError.name = `React ErrorBoundary ${errorBoundaryError.name}`;\n        errorBoundaryError.stack = componentStack;\n\n        // Using the `LinkedErrors` integration to link the errors together.\n        error.cause = errorBoundaryError;\n      }\n\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n      const eventId = captureException(error, { contexts: { react: { componentStack } } });\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        showReportDialog({ ...dialogOptions, eventId });\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n  public componentDidMount(): void {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n  }\n\n  public resetErrorBoundary: () => void = () => {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      onReset(error, componentStack, eventId);\n    }\n    this.setState(INITIAL_STATE);\n  };\n\n  public render(): React.ReactNode {\n    const { fallback, children } = this.props;\n    const { error, componentStack, eventId } = this.state;\n\n    if (error) {\n      let element: React.ReactElement | undefined = undefined;\n      if (typeof fallback === 'function') {\n        element = fallback({ error, componentStack, resetError: this.resetErrorBoundary, eventId });\n      } else {\n        element = fallback;\n      }\n\n      if (React.isValidElement(element)) {\n        return element;\n      }\n\n      if (fallback) {\n        IS_DEBUG_BUILD && logger.warn('fallback did not produce a valid ReactElement');\n      }\n\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n\n    if (typeof children === 'function') {\n      return (children as () => React.ReactNode)();\n    }\n    return children;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary<P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n  errorBoundaryOptions: ErrorBoundaryProps,\n): React.FC<P> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped: React.FC<P> = (props: P) => (\n    <ErrorBoundary {...errorBoundaryOptions}>\n      <WrappedComponent {...props} />\n    </ErrorBoundary>\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, withErrorBoundary };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}