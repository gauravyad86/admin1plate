{"ast":null,"code":"import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getActiveTransaction } from './utils';\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation() {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var status_1 = 'internal_error';\n    IS_DEBUG_BUILD && logger.log(\"[Tracing] Transaction: \" + status_1 + \" -> Global error occured\");\n    activeTransaction.setStatus(status_1);\n  }\n}","map":{"version":3,"names":["addInstrumentationHandler","logger","IS_DEBUG_BUILD","getActiveTransaction","registerErrorInstrumentation","errorCallback","activeTransaction","status_1","log","setStatus"],"sources":["../../../src/errors.ts"],"sourcesContent":["import { addInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from './flags';\nimport { SpanStatusType } from './span';\nimport { getActiveTransaction } from './utils';\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status: SpanStatusType = 'internal_error';\n    IS_DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n"],"mappings":"AAAA,SAASA,yBAAyB,EAAEC,MAAM,QAAQ,eAAe;AAEjE,SAASC,cAAc,QAAQ,SAAS;AAExC,SAASC,oBAAoB,QAAQ,SAAS;AAE9C;;;AAGA,OAAM,SAAUC,4BAA4BA,CAAA;EAC1CJ,yBAAyB,CAAC,OAAO,EAAEK,aAAa,CAAC;EACjDL,yBAAyB,CAAC,oBAAoB,EAAEK,aAAa,CAAC;AAChE;AAEA;;;AAGA,SAASA,aAAaA,CAAA;EACpB,IAAMC,iBAAiB,GAAGH,oBAAoB,EAAE;EAChD,IAAIG,iBAAiB,EAAE;IACrB,IAAMC,QAAM,GAAmB,gBAAgB;IAC/CL,cAAc,IAAID,MAAM,CAACO,GAAG,CAAC,4BAA0BD,QAAM,6BAA0B,CAAC;IACxFD,iBAAiB,CAACG,SAAS,CAACF,QAAM,CAAC;;AAEvC"},"metadata":{},"sourceType":"module"}