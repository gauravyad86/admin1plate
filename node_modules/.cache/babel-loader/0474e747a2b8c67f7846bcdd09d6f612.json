{"ast":null,"code":"/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nexport var SpanStatus;\n(function (SpanStatus) {\n  /** The operation completed successfully. */\n  SpanStatus[\"Ok\"] = \"ok\";\n  /** Deadline expired before operation could complete. */\n  SpanStatus[\"DeadlineExceeded\"] = \"deadline_exceeded\";\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  SpanStatus[\"Unauthenticated\"] = \"unauthenticated\";\n  /** 403 Forbidden */\n  SpanStatus[\"PermissionDenied\"] = \"permission_denied\";\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  SpanStatus[\"NotFound\"] = \"not_found\";\n  /** 429 Too Many Requests */\n  SpanStatus[\"ResourceExhausted\"] = \"resource_exhausted\";\n  /** Client specified an invalid argument. 4xx. */\n  SpanStatus[\"InvalidArgument\"] = \"invalid_argument\";\n  /** 501 Not Implemented */\n  SpanStatus[\"Unimplemented\"] = \"unimplemented\";\n  /** 503 Service Unavailable */\n  SpanStatus[\"Unavailable\"] = \"unavailable\";\n  /** Other/generic 5xx. */\n  SpanStatus[\"InternalError\"] = \"internal_error\";\n  /** Unknown. Any non-standard HTTP status code. */\n  SpanStatus[\"UnknownError\"] = \"unknown_error\";\n  /** The operation was cancelled (typically by the user). */\n  SpanStatus[\"Cancelled\"] = \"cancelled\";\n  /** Already exists (409) */\n  SpanStatus[\"AlreadyExists\"] = \"already_exists\";\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  SpanStatus[\"FailedPrecondition\"] = \"failed_precondition\";\n  /** The operation was aborted, typically due to a concurrency issue. */\n  SpanStatus[\"Aborted\"] = \"aborted\";\n  /** Operation was attempted past the valid range. */\n  SpanStatus[\"OutOfRange\"] = \"out_of_range\";\n  /** Unrecoverable data loss or corruption */\n  SpanStatus[\"DataLoss\"] = \"data_loss\";\n})(SpanStatus || (SpanStatus = {}));","map":{"version":3,"names":["SpanStatus"],"sources":["../../../src/spanstatus.ts"],"sourcesContent":["/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n"],"mappings":"AAAA;;;;AAIA;AACA,WAAYA,UAmCX;AAnCD,WAAYA,UAAU;EACpB;EACAA,UAAA,aAAS;EACT;EACAA,UAAA,0CAAsC;EACtC;EACAA,UAAA,uCAAmC;EACnC;EACAA,UAAA,0CAAsC;EACtC;EACAA,UAAA,0BAAsB;EACtB;EACAA,UAAA,4CAAwC;EACxC;EACAA,UAAA,wCAAoC;EACpC;EACAA,UAAA,mCAA+B;EAC/B;EACAA,UAAA,+BAA2B;EAC3B;EACAA,UAAA,oCAAgC;EAChC;EACAA,UAAA,kCAA8B;EAC9B;EACAA,UAAA,2BAAuB;EACvB;EACAA,UAAA,oCAAgC;EAChC;EACAA,UAAA,8CAA0C;EAC1C;EACAA,UAAA,uBAAmB;EACnB;EACAA,UAAA,+BAA2B;EAC3B;EACAA,UAAA,0BAAsB;AACxB,CAAC,EAnCWA,UAAU,KAAVA,UAAU"},"metadata":{},"sourceType":"module"}