{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState,useRef}from'react';import{useMutation,gql}from'@apollo/client';import{validateFunc}from'../../constraints/constraints';import{withTranslation}from'react-i18next';import{vendorResetPassword}from'../../apollo';import{Box,Typography,Input,Alert,Button}from'@mui/material';import useStyles from'../Configuration/styles';import useGlobalStyles from'../../utils/globalStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CHANGE_PASSWORD=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  \",\"\\n\"])),vendorResetPassword);function ResetPassword(props){const{t}=props;const formRef=useRef();const[passError,passErrorSetter]=useState(null);const[confirmPassError,confirmPassErrorSetter]=useState(null);const[mainError,mainErrorSetter]=useState('');const[success,successSetter]=useState('');const onBlur=(setter,field,state)=>{setter(!validateFunc({[field]:state},field));};const onSubmitValidaiton=()=>{const oldPassword=!validateFunc({password:formRef.current['input-oldPassword'].value},'password');const newPassword=!validateFunc({password:formRef.current['input-newPassword'].value},'password');passErrorSetter(oldPassword);confirmPassErrorSetter(newPassword);return oldPassword&&newPassword;};const onCompleted=data=>{const message=t('PasswordChangedSuccessfully');mainErrorSetter('');successSetter(message);setTimeout(hideAlert,5000);};const onError=_ref=>{let{graphQLErrors,networkError}=_ref;if(graphQLErrors){mainErrorSetter(graphQLErrors[0].message);}if(networkError){mainErrorSetter(networkError.result.errors[0].message);}successSetter('');setTimeout(hideAlert,5000);};const hideAlert=()=>{mainErrorSetter('');successSetter('');};const[mutate]=useMutation(CHANGE_PASSWORD,{onError,onCompleted});const classes=useStyles();const globalClasses=useGlobalStyles();return/*#__PURE__*/_jsxs(Box,{container:true,className:classes.container,children:[/*#__PURE__*/_jsx(Box,{className:classes.flexRow,children:/*#__PURE__*/_jsx(Box,{item:true,className:classes.heading,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:classes.text,children:t('ResetPassword')})})}),/*#__PURE__*/_jsxs(Box,{className:classes.form,children:[/*#__PURE__*/_jsxs(\"form\",{ref:formRef,children:[/*#__PURE__*/_jsx(Box,{className:globalClasses.flexRow,children:/*#__PURE__*/_jsx(Input,{id:\"input-oldPassword\",name:\"input-oldPassword\",placeholder:t('Password'),maxLength:\"30\",type:\"password\",defaultValue:\"\",onBlur:event=>{onBlur(passErrorSetter,'password',event.target.value);},disableUnderline:true,className:[globalClasses.input,passError===false?globalClasses.inputError:passError===true?globalClasses.inputSuccess:'']})}),/*#__PURE__*/_jsx(Box,{className:globalClasses.flexRow,children:/*#__PURE__*/_jsx(Input,{id:\"input-newPassword\",name:\"input-newPassword\",placeholder:t('ConfirmPassword'),maxLength:\"30\",type:\"password\",defaultValue:\"\",onBlur:event=>{onBlur(confirmPassErrorSetter,'password',event.target.value);},disableUnderline:true,className:[globalClasses.input,confirmPassError===false?globalClasses.inputError:confirmPassError===true?globalClasses.inputSuccess:'']})}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{className:globalClasses.button,onClick:async e=>{e.preventDefault();if(onSubmitValidaiton()){mutate({variables:{oldPassword:formRef.current['input-oldPassword'].value,newPassword:formRef.current['input-newPassword'].value}});}},children:t('Reset')})})]}),/*#__PURE__*/_jsxs(Box,{mt:2,children:[success&&/*#__PURE__*/_jsx(Alert,{className:globalClasses.alertSuccess,variant:\"filled\",severity:\"success\",children:\"Success\"}),mainError&&/*#__PURE__*/_jsx(Alert,{className:globalClasses.alertError,variant:\"filled\",severity:\"error\",children:\"Error\"})]})]})]});}export default withTranslation()(ResetPassword);","map":{"version":3,"names":["React","useState","useRef","useMutation","gql","validateFunc","withTranslation","vendorResetPassword","Box","Typography","Input","Alert","Button","useStyles","useGlobalStyles","jsx","_jsx","jsxs","_jsxs","CHANGE_PASSWORD","_templateObject","_taggedTemplateLiteral","ResetPassword","props","t","formRef","passError","passErrorSetter","confirmPassError","confirmPassErrorSetter","mainError","mainErrorSetter","success","successSetter","onBlur","setter","field","state","onSubmitValidaiton","oldPassword","password","current","value","newPassword","onCompleted","data","message","setTimeout","hideAlert","onError","_ref","graphQLErrors","networkError","result","errors","mutate","classes","globalClasses","container","className","children","flexRow","item","heading","variant","text","form","ref","id","name","placeholder","maxLength","type","defaultValue","event","target","disableUnderline","input","inputError","inputSuccess","button","onClick","e","preventDefault","variables","mt","alertSuccess","severity","alertError"],"sources":["/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/components/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport { useMutation, gql } from '@apollo/client'\nimport { validateFunc } from '../../constraints/constraints'\nimport { withTranslation } from 'react-i18next'\nimport { vendorResetPassword } from '../../apollo'\nimport { Box, Typography, Input, Alert, Button } from '@mui/material'\nimport useStyles from '../Configuration/styles'\nimport useGlobalStyles from '../../utils/globalStyles'\nconst CHANGE_PASSWORD = gql`\n  ${vendorResetPassword}\n`\n\nfunction ResetPassword(props) {\n  const { t } = props\n  const formRef = useRef()\n  const [passError, passErrorSetter] = useState(null)\n  const [confirmPassError, confirmPassErrorSetter] = useState(null)\n  const [mainError, mainErrorSetter] = useState('')\n  const [success, successSetter] = useState('')\n\n  const onBlur = (setter, field, state) => {\n    setter(!validateFunc({ [field]: state }, field))\n  }\n\n  const onSubmitValidaiton = () => {\n    const oldPassword = !validateFunc(\n      { password: formRef.current['input-oldPassword'].value },\n      'password'\n    )\n    const newPassword = !validateFunc(\n      { password: formRef.current['input-newPassword'].value },\n      'password'\n    )\n    passErrorSetter(oldPassword)\n    confirmPassErrorSetter(newPassword)\n\n    return oldPassword && newPassword\n  }\n  const onCompleted = data => {\n    const message = t('PasswordChangedSuccessfully')\n    mainErrorSetter('')\n    successSetter(message)\n    setTimeout(hideAlert, 5000)\n  }\n  const onError = ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      mainErrorSetter(graphQLErrors[0].message)\n    }\n    if (networkError) {\n      mainErrorSetter(networkError.result.errors[0].message)\n    }\n    successSetter('')\n    setTimeout(hideAlert, 5000)\n  }\n  const hideAlert = () => {\n    mainErrorSetter('')\n    successSetter('')\n  }\n  const [mutate] = useMutation(CHANGE_PASSWORD, {\n    onError,\n    onCompleted\n  })\n\n  const classes = useStyles()\n  const globalClasses = useGlobalStyles()\n\n  return (\n    <Box container className={classes.container}>\n      <Box className={classes.flexRow}>\n        <Box item className={classes.heading}>\n          <Typography variant=\"h6\" className={classes.text}>\n            {t('ResetPassword')}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box className={classes.form}>\n        <form ref={formRef}>\n          <Box className={globalClasses.flexRow}>\n            <Input\n              id=\"input-oldPassword\"\n              name=\"input-oldPassword\"\n              placeholder={t('Password')}\n              maxLength=\"30\"\n              type=\"password\"\n              defaultValue=\"\"\n              onBlur={event => {\n                onBlur(passErrorSetter, 'password', event.target.value)\n              }}\n              disableUnderline\n              className={[\n                globalClasses.input,\n                passError === false\n                  ? globalClasses.inputError\n                  : passError === true\n                  ? globalClasses.inputSuccess\n                  : ''\n              ]}\n            />\n          </Box>\n          <Box className={globalClasses.flexRow}>\n            <Input\n              id=\"input-newPassword\"\n              name=\"input-newPassword\"\n              placeholder={t('ConfirmPassword')}\n              maxLength=\"30\"\n              type=\"password\"\n              defaultValue=\"\"\n              onBlur={event => {\n                onBlur(confirmPassErrorSetter, 'password', event.target.value)\n              }}\n              disableUnderline\n              className={[\n                globalClasses.input,\n                confirmPassError === false\n                  ? globalClasses.inputError\n                  : confirmPassError === true\n                  ? globalClasses.inputSuccess\n                  : ''\n              ]}\n            />\n          </Box>\n          <Box>\n            <Button\n              className={globalClasses.button}\n              onClick={async e => {\n                e.preventDefault()\n                if (onSubmitValidaiton()) {\n                  mutate({\n                    variables: {\n                      oldPassword: formRef.current['input-oldPassword'].value,\n                      newPassword: formRef.current['input-newPassword'].value\n                    }\n                  })\n                }\n              }}>\n              {t('Reset')}\n            </Button>\n          </Box>\n        </form>\n        <Box mt={2}>\n          {success && (\n            <Alert\n              className={globalClasses.alertSuccess}\n              variant=\"filled\"\n              severity=\"success\">\n              Success\n            </Alert>\n          )}\n          {mainError && (\n            <Alert\n              className={globalClasses.alertError}\n              variant=\"filled\"\n              severity=\"error\">\n              Error\n            </Alert>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default withTranslation()(ResetPassword)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}