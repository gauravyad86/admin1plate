{"ast":null,"code":"import { getGlobalObject, logger } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from '../constants';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', function () {\n      var activeTransaction = getActiveTransaction();\n      if (global.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Transaction: \" + statusType + \" -> since tab moved to the background, op: \" + activeTransaction.op);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[2]);\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    IS_DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}","map":{"version":3,"names":["getGlobalObject","logger","FINISH_REASON_TAG","IDLE_TRANSACTION_FINISH_REASONS","IS_DEBUG_BUILD","getActiveTransaction","global","registerBackgroundTabDetection","document","addEventListener","activeTransaction","hidden","statusType","log","op","status","setStatus","setTag","finish","warn"],"sources":["../../../../src/browser/backgroundtab.ts"],"sourcesContent":["import { getGlobalObject, logger } from '@sentry/utils';\n\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from '../constants';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { IdleTransaction } from '../idletransaction';\nimport { SpanStatusType } from '../span';\nimport { getActiveTransaction } from '../utils';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (global.document.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        IS_DEBUG_BUILD &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[2]);\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    IS_DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,MAAM,QAAQ,eAAe;AAEvD,SAASC,iBAAiB,EAAEC,+BAA+B,QAAQ,cAAc;AACjF,SAASC,cAAc,QAAQ,UAAU;AAGzC,SAASC,oBAAoB,QAAQ,UAAU;AAE/C,IAAMC,MAAM,GAAGN,eAAe,EAAU;AAExC;;;;AAIA,OAAM,SAAUO,8BAA8BA,CAAA;EAC5C,IAAID,MAAM,IAAIA,MAAM,CAACE,QAAQ,EAAE;IAC7BF,MAAM,CAACE,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE;MACnD,IAAMC,iBAAiB,GAAGL,oBAAoB,EAAqB;MACnE,IAAIC,MAAM,CAACE,QAAQ,CAACG,MAAM,IAAID,iBAAiB,EAAE;QAC/C,IAAME,UAAU,GAAmB,WAAW;QAE9CR,cAAc,IACZH,MAAM,CAACY,GAAG,CACR,4BAA0BD,UAAU,mDAA8CF,iBAAiB,CAACI,EAAI,CACzG;QACH;QACA;QACA,IAAI,CAACJ,iBAAiB,CAACK,MAAM,EAAE;UAC7BL,iBAAiB,CAACM,SAAS,CAACJ,UAAU,CAAC;;QAEzCF,iBAAiB,CAACO,MAAM,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;QAC/DP,iBAAiB,CAACO,MAAM,CAACf,iBAAiB,EAAEC,+BAA+B,CAAC,CAAC,CAAC,CAAC;QAC/EO,iBAAiB,CAACQ,MAAM,EAAE;;IAE9B,CAAC,CAAC;GACH,MAAM;IACLd,cAAc,IAAIH,MAAM,CAACkB,IAAI,CAAC,oFAAoF,CAAC;;AAEvH"},"metadata":{},"sourceType":"module"}