{"ast":null,"code":"import { __assign, __values } from \"tslib\";\nvar STACKTRACE_LIMIT = 50;\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser() {\n  var parsers = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    parsers[_i] = arguments[_i];\n  }\n  var sortedParsers = parsers.sort(function (a, b) {\n    return a[0] - b[0];\n  }).map(function (p) {\n    return p[1];\n  });\n  return function (stack, skipFirst) {\n    var e_1, _a, e_2, _b;\n    if (skipFirst === void 0) {\n      skipFirst = 0;\n    }\n    var frames = [];\n    try {\n      for (var _c = __values(stack.split('\\n').slice(skipFirst)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var line = _d.value;\n        try {\n          for (var sortedParsers_1 = (e_2 = void 0, __values(sortedParsers)), sortedParsers_1_1 = sortedParsers_1.next(); !sortedParsers_1_1.done; sortedParsers_1_1 = sortedParsers_1.next()) {\n            var parser = sortedParsers_1_1.value;\n            var frame = parser(line);\n            if (frame) {\n              frames.push(frame);\n              break;\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (sortedParsers_1_1 && !sortedParsers_1_1.done && (_b = sortedParsers_1.return)) _b.call(sortedParsers_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n/**\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n  var localStack = stack;\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack.slice(0, STACKTRACE_LIMIT).map(function (frame) {\n    return __assign(__assign({}, frame), {\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?'\n    });\n  }).reverse();\n}\nvar defaultFunctionName = '<anonymous>';\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}","map":{"version":3,"names":["STACKTRACE_LIMIT","createStackParser","parsers","_i","arguments","length","sortedParsers","sort","a","b","map","p","stack","skipFirst","frames","_c","__values","split","slice","_d","next","done","line","value","sortedParsers_1","e_2","sortedParsers_1_1","parser","frame","push","stripSentryFramesAndReverse","localStack","firstFrameFunction","function","lastFrameFunction","indexOf","__assign","filename","reverse","defaultFunctionName","getFunctionName","fn","name","e"],"sources":["../../src/stacktrace.ts"],"sourcesContent":["import { StackFrame } from '@sentry/types';\n\nconst STACKTRACE_LIMIT = 50;\n\nexport type StackParser = (stack: string, skipFirst?: number) => StackFrame[];\nexport type StackLineParserFn = (line: string) => StackFrame | undefined;\nexport type StackLineParser = [number, StackLineParserFn];\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      for (const parser of sortedParsers) {\n        const frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: StackFrame[]): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}