{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nexport var onHidden = function (cb, once) {\n  var onHiddenOrPageHide = function (event) {\n    if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};","map":{"version":3,"names":["getGlobalObject","onHidden","cb","once","onHiddenOrPageHide","event","type","document","visibilityState","removeEventListener","addEventListener"],"sources":["../../../../../../src/browser/web-vitals/lib/onHidden.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobalObject } from '@sentry/utils';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || getGlobalObject<Window>().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,eAAe,QAAQ,eAAe;AAM/C,OAAO,IAAMC,QAAQ,GAAG,SAAAA,CAACC,EAAoB,EAAEC,IAAc;EAC3D,IAAMC,kBAAkB,GAAG,SAAAA,CAACC,KAAY;IACtC,IAAIA,KAAK,CAACC,IAAI,KAAK,UAAU,IAAIN,eAAe,EAAU,CAACO,QAAQ,CAACC,eAAe,KAAK,QAAQ,EAAE;MAChGN,EAAE,CAACG,KAAK,CAAC;MACT,IAAIF,IAAI,EAAE;QACRM,mBAAmB,CAAC,kBAAkB,EAAEL,kBAAkB,EAAE,IAAI,CAAC;QACjEK,mBAAmB,CAAC,UAAU,EAAEL,kBAAkB,EAAE,IAAI,CAAC;;;EAG/D,CAAC;EACDM,gBAAgB,CAAC,kBAAkB,EAAEN,kBAAkB,EAAE,IAAI,CAAC;EAC9D;EACA;EACAM,gBAAgB,CAAC,UAAU,EAAEN,kBAAkB,EAAE,IAAI,CAAC;AACxD,CAAC"},"metadata":{},"sourceType":"module"}