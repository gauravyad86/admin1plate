{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/components/Configuration/Web/Web.jsx\",\n  _templateObject,\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { useMutation, gql } from '@apollo/client';\nimport { validateFunc } from '../../../constraints/constraints';\nimport { saveWebConfiguration } from '../../../apollo'; // Update with the correct import path\nimport useStyles from '../styles';\nimport useGlobalStyles from '../../../utils/globalStyles';\nimport { Box, Typography, Input, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAVE_WEB_CONFIGURATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  \", \"\\n\"])), saveWebConfiguration);\nfunction WebConfiguration(props) {\n  _s();\n  const formRef = useRef();\n  const [googleMapLibraries] = useState(props.googleMapLibraries || '');\n  const [googleColor] = useState(props.googleColor || '');\n  const [googleMapLibrariesError, setGoogleMapLibrariesError] = useState(null);\n  const [googleColorError, setGoogleColorError] = useState(null);\n  const [mutate, {\n    loading\n  }] = useMutation(SAVE_WEB_CONFIGURATION);\n  const onBlur = (setter, field, state) => {\n    setter(!validateFunc({\n      [field]: state\n    }, field));\n  };\n  const validateInput = () => {\n    let googleMapLibrariesResult = true;\n    let googleColorResult = true;\n    googleMapLibrariesResult = !validateFunc({\n      googleMapLibraries: formRef.current['input-googleMapLibraries'].value\n    }, 'googleMapLibraries');\n    googleColorResult = !validateFunc({\n      googleColor: formRef.current['input-googleColor'].value\n    }, 'googleColor');\n    setGoogleMapLibrariesError(googleMapLibrariesResult);\n    setGoogleColorError(googleColorResult);\n    return googleMapLibrariesResult && googleColorResult;\n  };\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    container: true,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.flexRow,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        item: true,\n        className: classes.heading,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.text,\n          children: \"Web Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        ref: formRef,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.labelText,\n            children: \"Google Map Libraries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              marginTop: -1\n            },\n            id: \"input-googleMapLibraries\",\n            name: \"input-googleMapLibraries\",\n            placeholder: \"Google Map Libraries\",\n            defaultValue: googleMapLibraries,\n            onBlur: event => onBlur(setGoogleMapLibrariesError, 'googleMapLibraries', event.target.value),\n            disableUnderline: true,\n            className: [globalClasses.input, googleMapLibrariesError === false ? globalClasses.inputError : googleMapLibrariesError === true ? globalClasses.inputSuccess : '']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.labelText,\n            children: \"Google Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              marginTop: -1\n            },\n            id: \"input-googleColor\",\n            name: \"input-googleColor\",\n            placeholder: \"Google Color\",\n            defaultValue: googleColor,\n            onBlur: event => onBlur(setGoogleColorError, 'googleColor', event.target.value),\n            disableUnderline: true,\n            className: [globalClasses.input, googleColorError === false ? globalClasses.inputError : googleColorError === true ? globalClasses.inputSuccess : '']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: globalClasses.button,\n            disabled: loading,\n            onClick: e => {\n              e.preventDefault();\n              if (validateInput() && !loading) {\n                mutate({\n                  variables: {\n                    configurationInput: {\n                      serverUrlWeb: formRef.current['input-serverUrl'].value,\n                      wsServerUrlWeb: formRef.current['input-wsServerUrl'].value,\n                      googleMapLibraries: formRef.current['input-googleMapLibraries'].value,\n                      googleColor: formRef.current['input-googleColor'].value\n                    }\n                  }\n                });\n              }\n            },\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(WebConfiguration, \"RZdKXpIuW7mrE44dfzUG8k4uGA8=\", false, function () {\n  return [useMutation, useStyles, useGlobalStyles];\n});\n_c = WebConfiguration;\nexport default withTranslation()(WebConfiguration);\nvar _c;\n$RefreshReg$(_c, \"WebConfiguration\");","map":{"version":3,"names":["React","useRef","useState","withTranslation","useMutation","gql","validateFunc","saveWebConfiguration","useStyles","useGlobalStyles","Box","Typography","Input","Button","jsxDEV","_jsxDEV","SAVE_WEB_CONFIGURATION","_templateObject","_taggedTemplateLiteral","WebConfiguration","props","_s","formRef","googleMapLibraries","googleColor","googleMapLibrariesError","setGoogleMapLibrariesError","googleColorError","setGoogleColorError","mutate","loading","onBlur","setter","field","state","validateInput","googleMapLibrariesResult","googleColorResult","current","value","classes","globalClasses","container","className","children","flexRow","item","heading","variant","text","fileName","_jsxFileName","lineNumber","columnNumber","form","ref","labelText","style","marginTop","id","name","placeholder","defaultValue","event","target","disableUnderline","input","inputError","inputSuccess","button","disabled","onClick","e","preventDefault","variables","configurationInput","serverUrlWeb","wsServerUrlWeb","_c","$RefreshReg$"],"sources":["/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/components/Configuration/Web/Web.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { useMutation, gql } from '@apollo/client'\nimport { validateFunc } from '../../../constraints/constraints'\nimport { saveWebConfiguration } from '../../../apollo' // Update with the correct import path\nimport useStyles from '../styles'\nimport useGlobalStyles from '../../../utils/globalStyles'\nimport { Box, Typography, Input, Button } from '@mui/material'\n\nconst SAVE_WEB_CONFIGURATION = gql`\n  ${saveWebConfiguration}\n`\n\nfunction WebConfiguration(props) {\n  const formRef = useRef()\n\n  const [googleMapLibraries] = useState(props.googleMapLibraries || '')\n  const [googleColor] = useState(props.googleColor || '')\n\n  const [googleMapLibrariesError, setGoogleMapLibrariesError] = useState(null)\n  const [googleColorError, setGoogleColorError] = useState(null)\n\n  const [mutate, { loading }] = useMutation(SAVE_WEB_CONFIGURATION)\n\n  const onBlur = (setter, field, state) => {\n    setter(!validateFunc({ [field]: state }, field))\n  }\n\n  const validateInput = () => {\n    let googleMapLibrariesResult = true\n    let googleColorResult = true\n\n    googleMapLibrariesResult = !validateFunc(\n      { googleMapLibraries: formRef.current['input-googleMapLibraries'].value },\n      'googleMapLibraries'\n    )\n    googleColorResult = !validateFunc(\n      { googleColor: formRef.current['input-googleColor'].value },\n      'googleColor'\n    )\n\n    setGoogleMapLibrariesError(googleMapLibrariesResult)\n    setGoogleColorError(googleColorResult)\n\n    return googleMapLibrariesResult && googleColorResult\n  }\n\n  const classes = useStyles()\n  const globalClasses = useGlobalStyles()\n\n  return (\n    <Box container className={classes.container}>\n      <Box className={classes.flexRow}>\n        <Box item className={classes.heading}>\n          <Typography variant=\"h6\" className={classes.text}>\n            Web Configuration\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box className={classes.form}>\n        <form ref={formRef}>\n          <Box>\n            <Typography className={classes.labelText}>\n              Google Map Libraries\n            </Typography>\n            <Input\n              style={{ marginTop: -1 }}\n              id=\"input-googleMapLibraries\"\n              name=\"input-googleMapLibraries\"\n              placeholder=\"Google Map Libraries\"\n              defaultValue={googleMapLibraries}\n              onBlur={event =>\n                onBlur(\n                  setGoogleMapLibrariesError,\n                  'googleMapLibraries',\n                  event.target.value\n                )\n              }\n              disableUnderline\n              className={[\n                globalClasses.input,\n                googleMapLibrariesError === false\n                  ? globalClasses.inputError\n                  : googleMapLibrariesError === true\n                  ? globalClasses.inputSuccess\n                  : ''\n              ]}\n            />\n          </Box>\n\n          <Box>\n            <Typography className={classes.labelText}>Google Color</Typography>\n            <Input\n              style={{ marginTop: -1 }}\n              id=\"input-googleColor\"\n              name=\"input-googleColor\"\n              placeholder=\"Google Color\"\n              defaultValue={googleColor}\n              onBlur={event =>\n                onBlur(setGoogleColorError, 'googleColor', event.target.value)\n              }\n              disableUnderline\n              className={[\n                globalClasses.input,\n                googleColorError === false\n                  ? globalClasses.inputError\n                  : googleColorError === true\n                  ? globalClasses.inputSuccess\n                  : ''\n              ]}\n            />\n          </Box>\n          <Box>\n            <Button\n              className={globalClasses.button}\n              disabled={loading}\n              onClick={e => {\n                e.preventDefault()\n                if (validateInput() && !loading) {\n                  mutate({\n                    variables: {\n                      configurationInput: {\n                        serverUrlWeb: formRef.current['input-serverUrl'].value,\n                        wsServerUrlWeb:\n                          formRef.current['input-wsServerUrl'].value,\n                        googleMapLibraries:\n                          formRef.current['input-googleMapLibraries'].value,\n                        googleColor: formRef.current['input-googleColor'].value\n                      }\n                    }\n                  })\n                }\n              }}>\n              SAVE\n            </Button>\n          </Box>\n        </form>\n      </Box>\n    </Box>\n  )\n}\n\nexport default withTranslation()(WebConfiguration)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}