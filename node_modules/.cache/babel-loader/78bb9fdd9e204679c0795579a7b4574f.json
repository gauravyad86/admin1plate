{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getGlobalObject } from './global';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n  var global = getGlobalObject();\n  var crypto = global.crypto || global.msCrypto;\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = arr[3] & 0xfff | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = arr[4] & 0x3fff | 0x8000;\n    var pad = function (num) {\n      var v = num.toString(16);\n      while (v.length < 4) {\n        v = \"0\" + v;\n      }\n      return v;\n    };\n    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    // eslint-disable-next-line no-bitwise\n    var r = Math.random() * 16 | 0;\n    // eslint-disable-next-line no-bitwise\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n  if (!match) {\n    return {};\n  }\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment\n  };\n}\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n  var message = event.message,\n    eventId = event.event_id;\n  if (message) {\n    return message;\n  }\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return firstException.type + \": \" + firstException.value;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type) {\n  var exception = event.exception = event.exception || {};\n  var values = exception.values = exception.values || [];\n  var firstException = values[0] = values[0] || {};\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n  var defaultMechanism = {\n    type: 'generic',\n    handled: true\n  };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = __assign(__assign(__assign({}, defaultMechanism), currentMechanism), newMechanism);\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = __assign(__assign({}, currentMechanism && currentMechanism.data), newMechanism.data);\n    firstException.mechanism.data = mergedData;\n  }\n}\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4]\n  };\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines, frame, linesOfContext) {\n  if (linesOfContext === void 0) {\n    linesOfContext = 5;\n  }\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n  frame.pre_context = lines.slice(Math.max(0, sourceLine - linesOfContext), sourceLine).map(function (line) {\n    return snipLine(line, 0);\n  });\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n  frame.post_context = lines.slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext).map(function (line) {\n    return snipLine(line, 0);\n  });\n}\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && exception.__sentry_captured__) {\n    return true;\n  }\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n  return false;\n}","map":{"version":3,"names":["getGlobalObject","addNonEnumerableProperty","snipLine","uuid4","global","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","toString","length","replace","c","r","Math","random","parseUrl","url","match","query","fragment","host","path","protocol","relative","getFirstException","event","exception","values","undefined","getEventDescription","message","eventId","event_id","firstException","type","value","addExceptionTypeValue","addExceptionMechanism","newMechanism","defaultMechanism","handled","currentMechanism","mechanism","__assign","mergedData","data","SEMVER_REGEXP","parseSemver","input","major","parseInt","minor","patch","buildmetadata","isNaN","prerelease","addContextToFrame","lines","frame","linesOfContext","lineno","maxLines","sourceLine","max","min","pre_context","slice","map","line","context_line","colno","post_context","stripUrlQueryAndFragment","urlPath","split","checkOrSetAlreadyCaught","__sentry_captured__","err"],"sources":["../../src/misc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { getGlobalObject } from './global';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}