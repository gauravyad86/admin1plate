{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { captureException, getReportDialogEndpoint, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, addNonEnumerableProperty, getGlobalObject, getOriginalFunction, logger, markFunctionWrapped } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nvar global = getGlobalObject();\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(function () {\n    ignoreOnError -= 1;\n  });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n  if (options === void 0) {\n    options = {};\n  }\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      var wrappedArguments = args.map(function (arg) {\n        return wrap(arg, options);\n      });\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n      withScope(function (scope) {\n        scope.addEventProcessor(function (event) {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n          event.extra = __assign(__assign({}, event.extra), {\n            arguments: args\n          });\n          return event;\n        });\n        captureException(ex);\n      });\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get: function () {\n          return fn.name;\n        }\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n  return sentryWrapped;\n}\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (!global.document) {\n    return;\n  }\n  if (!options.eventId) {\n    IS_DEBUG_BUILD && logger.error('Missing eventId option in showReportDialog call');\n    return;\n  }\n  if (!options.dsn) {\n    IS_DEBUG_BUILD && logger.error('Missing dsn option in showReportDialog call');\n    return;\n  }\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(options.dsn, options);\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  }\n}","map":{"version":3,"names":["captureException","getReportDialogEndpoint","withScope","addExceptionMechanism","addExceptionTypeValue","addNonEnumerableProperty","getGlobalObject","getOriginalFunction","logger","markFunctionWrapped","IS_DEBUG_BUILD","global","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","setTimeout","wrap","fn","options","before","wrapper","__sentry_wrapped__","e","sentryWrapped","args","Array","prototype","slice","call","arguments","apply","wrappedArguments","map","arg","ex","scope","addEventProcessor","event","mechanism","undefined","extra","__assign","property","Object","hasOwnProperty","_oO","descriptor","getOwnPropertyDescriptor","configurable","defineProperty","get","name","injectReportDialog","document","eventId","error","dsn","script","createElement","async","src","onLoad","onload","injectionPoint","head","body","appendChild"],"sources":["../../../src/helpers.ts"],"sourcesContent":["import { captureException, getReportDialogEndpoint, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getGlobalObject,\n  getOriginalFunction,\n  logger,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from './flags';\n\nconst global = getGlobalObject<Window>();\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sentryWrapped: WrappedFunction = function (this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options: ReportDialogOptions = {}): void {\n  if (!global.document) {\n    return;\n  }\n\n  if (!options.eventId) {\n    IS_DEBUG_BUILD && logger.error('Missing eventId option in showReportDialog call');\n    return;\n  }\n\n  if (!options.dsn) {\n    IS_DEBUG_BUILD && logger.error('Missing dsn option in showReportDialog call');\n    return;\n  }\n\n  const script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(options.dsn, options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = global.document.head || global.document.body;\n\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}