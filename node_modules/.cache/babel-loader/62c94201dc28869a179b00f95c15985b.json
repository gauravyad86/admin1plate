{"ast":null,"code":"export var TRACEPARENT_REGEXP = new RegExp('^[ \\\\t]*' +\n// whitespace\n'([0-9a-f]{32})?' +\n// trace_id\n'-?([0-9a-f]{16})?' +\n// span_id\n'-?([01])?' +\n// sampled\n'[ \\\\t]*$');\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent) {\n  var matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    var parentSampled = void 0;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled: parentSampled,\n      parentSpanId: matches[2]\n    };\n  }\n  return undefined;\n}","map":{"version":3,"names":["TRACEPARENT_REGEXP","RegExp","extractTraceparentData","traceparent","matches","match","parentSampled","traceId","parentSpanId","undefined"],"sources":["../../src/tracing.ts"],"sourcesContent":["import { TraceparentData } from '@sentry/types';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent: string): TraceparentData | undefined {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled: boolean | undefined;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n"],"mappings":"AAEA,OAAO,IAAMA,kBAAkB,GAAG,IAAIC,MAAM,CAC1C,UAAU;AAAG;AACX,iBAAiB;AAAG;AACpB,mBAAmB;AAAG;AACtB,WAAW;AAAG;AACd,UAAU,CACb;AAED;;;;;;;AAOA,OAAM,SAAUC,sBAAsBA,CAACC,WAAmB;EACxD,IAAMC,OAAO,GAAGD,WAAW,CAACE,KAAK,CAACL,kBAAkB,CAAC;EACrD,IAAII,OAAO,EAAE;IACX,IAAIE,aAAa,SAAqB;IACtC,IAAIF,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACtBE,aAAa,GAAG,IAAI;KACrB,MAAM,IAAIF,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC7BE,aAAa,GAAG,KAAK;;IAEvB,OAAO;MACLC,OAAO,EAAEH,OAAO,CAAC,CAAC,CAAC;MACnBE,aAAa,EAAAA,aAAA;MACbE,YAAY,EAAEJ,OAAO,CAAC,CAAC;KACxB;;EAEH,OAAOK,SAAS;AAClB"},"metadata":{},"sourceType":"module"}