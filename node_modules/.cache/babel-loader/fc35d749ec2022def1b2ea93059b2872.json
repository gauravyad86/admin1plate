{"ast":null,"code":"/*\n * Transform string by adding newline after x spaces\n * parameter: String, Number\n * return: String\n */const transformToNewline=function(input){let spaces=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;var spaceCount=0;var result=[];var splittedDesc=input.split('');for(let i=0;i<splittedDesc.length;i++){result.push(splittedDesc[i]);if(splittedDesc[i]===' '){++spaceCount;if(spaceCount%spaces===0&&spaceCount!==0)result.push('\\n');}}return result.join('');};export{transformToNewline};","map":{"version":3,"names":["transformToNewline","input","spaces","arguments","length","undefined","spaceCount","result","splittedDesc","split","i","push","join"],"sources":["/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/utils/stringManipulations.js"],"sourcesContent":["/*\n * Transform string by adding newline after x spaces\n * parameter: String, Number\n * return: String\n */\nconst transformToNewline = (input, spaces = 3) => {\n  var spaceCount = 0\n  var result = []\n  var splittedDesc = input.split('')\n  for (let i = 0; i < splittedDesc.length; i++) {\n    result.push(splittedDesc[i])\n    if (splittedDesc[i] === ' ') {\n      ++spaceCount\n      if (spaceCount % spaces === 0 && spaceCount !== 0) result.push('\\n')\n    }\n  }\n  return result.join('')\n}\n\nexport { transformToNewline }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAA,kBAAkB,CAAG,QAAAA,CAACC,KAAK,CAAiB,IAAf,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAC3C,GAAI,CAAAG,UAAU,CAAG,CAAC,CAClB,GAAI,CAAAC,MAAM,CAAG,EAAE,CACf,GAAI,CAAAC,YAAY,CAAGP,KAAK,CAACQ,KAAK,CAAC,EAAE,CAAC,CAClC,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,YAAY,CAACJ,MAAM,CAAEM,CAAC,EAAE,CAAE,CAC5CH,MAAM,CAACI,IAAI,CAACH,YAAY,CAACE,CAAC,CAAC,CAAC,CAC5B,GAAIF,YAAY,CAACE,CAAC,CAAC,GAAK,GAAG,CAAE,CAC3B,EAAEJ,UAAU,CACZ,GAAIA,UAAU,CAAGJ,MAAM,GAAK,CAAC,EAAII,UAAU,GAAK,CAAC,CAAEC,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC,CACtE,CACF,CACA,MAAO,CAAAJ,MAAM,CAACK,IAAI,CAAC,EAAE,CAAC,CACxB,CAAC,CAED,OAASZ,kBAAkB"},"metadata":{},"sourceType":"module"}