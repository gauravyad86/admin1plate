{"ast":null,"code":"import { Severity } from '@sentry/types';\nimport { SeverityLevels } from './enums';\nfunction isSupportedSeverity(level) {\n  return SeverityLevels.indexOf(level) !== -1;\n}\n/**\n * Converts a string-based level into a {@link Severity}.\n *\n * @param level string representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level) {\n  if (level === 'warn') return Severity.Warning;\n  if (isSupportedSeverity(level)) {\n    return level;\n  }\n  return Severity.Log;\n}","map":{"version":3,"names":["Severity","SeverityLevels","isSupportedSeverity","level","indexOf","severityFromString","Warning","Log"],"sources":["../../src/severity.ts"],"sourcesContent":["import { Severity } from '@sentry/types';\n\nimport { SeverityLevel, SeverityLevels } from './enums';\n\nfunction isSupportedSeverity(level: string): level is Severity {\n  return SeverityLevels.indexOf(level as SeverityLevel) !== -1;\n}\n/**\n * Converts a string-based level into a {@link Severity}.\n *\n * @param level string representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: SeverityLevel | string): Severity {\n  if (level === 'warn') return Severity.Warning;\n  if (isSupportedSeverity(level)) {\n    return level;\n  }\n  return Severity.Log;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AAExC,SAAwBC,cAAc,QAAQ,SAAS;AAEvD,SAASC,mBAAmBA,CAACC,KAAa;EACxC,OAAOF,cAAc,CAACG,OAAO,CAACD,KAAsB,CAAC,KAAK,CAAC,CAAC;AAC9D;AACA;;;;;;AAMA,OAAM,SAAUE,kBAAkBA,CAACF,KAA6B;EAC9D,IAAIA,KAAK,KAAK,MAAM,EAAE,OAAOH,QAAQ,CAACM,OAAO;EAC7C,IAAIJ,mBAAmB,CAACC,KAAK,CAAC,EAAE;IAC9B,OAAOA,KAAK;;EAEd,OAAOH,QAAQ,CAACO,GAAG;AACrB"},"metadata":{},"sourceType":"module"}