{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/components/Configuration/GoogleApi/GoogleApi.jsx\",\n  _templateObject,\n  _s = $RefreshSig$();\n// GoogleApiKeyConfiguration.jsx\n\nimport React, { useRef, useState } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { useMutation, gql } from '@apollo/client';\nimport { validateFunc } from '../../../constraints/constraints';\nimport { saveGoogleApiKeyConfiguration } from '../../../apollo';\nimport useStyles from '../styles';\nimport useGlobalStyles from '../../../utils/globalStyles';\nimport { Box, Typography, Input, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAVE_GOOGLE_API_KEY_CONFIGURATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  \", \"\\n\"])), saveGoogleApiKeyConfiguration);\nfunction GoogleApiKeyConfiguration(props) {\n  _s();\n  const formRef = useRef();\n  const [googleApiKey] = useState(props.googleApiKey || '');\n  const [googleApiKeyError, setGoogleApiKeyError] = useState(null);\n  const [mutate, {\n    loading\n  }] = useMutation(SAVE_GOOGLE_API_KEY_CONFIGURATION);\n  const onBlur = (setter, field, state) => {\n    setter(!validateFunc({\n      [field]: state\n    }, field));\n  };\n  const validateInput = () => {\n    let googleApiKeyResult = true;\n    googleApiKeyResult = !validateFunc({\n      googleApiKey: formRef.current['input-googleApiKey'].value\n    }, 'googleApiKey');\n    setGoogleApiKeyError(googleApiKeyResult);\n    return googleApiKeyResult;\n  };\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    container: true,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.flexRow,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        item: true,\n        className: classes.heading,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.text,\n          children: \"Google API Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        ref: formRef,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.labelText,\n            children: \"Google API Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              marginTop: -1\n            },\n            id: \"input-googleApiKey\",\n            name: \"input-googleApiKey\",\n            placeholder: \"Google API Key\",\n            defaultValue: googleApiKey,\n            type: \"password\",\n            onBlur: event => onBlur(setGoogleApiKeyError, 'googleApiKey', event.target.value),\n            disableUnderline: true,\n            className: [globalClasses.input, googleApiKeyError === false ? globalClasses.inputError : googleApiKeyError === true ? globalClasses.inputSuccess : '']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: globalClasses.button,\n            disabled: loading,\n            onClick: e => {\n              e.preventDefault();\n              if (validateInput() && !loading) {\n                mutate({\n                  variables: {\n                    configurationInput: {\n                      googleApiKey: formRef.current['input-googleApiKey'].value\n                    }\n                  }\n                });\n              }\n            },\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleApiKeyConfiguration, \"mopZKkoLgfP24MF1CbHi0Lh0uxM=\", false, function () {\n  return [useMutation, useStyles, useGlobalStyles];\n});\n_c = GoogleApiKeyConfiguration;\nexport default withTranslation()(GoogleApiKeyConfiguration);\nvar _c;\n$RefreshReg$(_c, \"GoogleApiKeyConfiguration\");","map":{"version":3,"names":["React","useRef","useState","withTranslation","useMutation","gql","validateFunc","saveGoogleApiKeyConfiguration","useStyles","useGlobalStyles","Box","Typography","Input","Button","jsxDEV","_jsxDEV","SAVE_GOOGLE_API_KEY_CONFIGURATION","_templateObject","_taggedTemplateLiteral","GoogleApiKeyConfiguration","props","_s","formRef","googleApiKey","googleApiKeyError","setGoogleApiKeyError","mutate","loading","onBlur","setter","field","state","validateInput","googleApiKeyResult","current","value","classes","globalClasses","container","className","children","flexRow","item","heading","variant","text","fileName","_jsxFileName","lineNumber","columnNumber","form","ref","labelText","style","marginTop","id","name","placeholder","defaultValue","type","event","target","disableUnderline","input","inputError","inputSuccess","button","disabled","onClick","e","preventDefault","variables","configurationInput","_c","$RefreshReg$"],"sources":["/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/components/Configuration/GoogleApi/GoogleApi.jsx"],"sourcesContent":["// GoogleApiKeyConfiguration.jsx\n\nimport React, { useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { useMutation, gql } from '@apollo/client'\nimport { validateFunc } from '../../../constraints/constraints'\nimport { saveGoogleApiKeyConfiguration } from '../../../apollo'\nimport useStyles from '../styles'\nimport useGlobalStyles from '../../../utils/globalStyles'\nimport { Box, Typography, Input, Button } from '@mui/material'\n\nconst SAVE_GOOGLE_API_KEY_CONFIGURATION = gql`\n  ${saveGoogleApiKeyConfiguration}\n`\n\nfunction GoogleApiKeyConfiguration(props) {\n  const formRef = useRef()\n\n  const [googleApiKey] = useState(props.googleApiKey || '')\n\n  const [googleApiKeyError, setGoogleApiKeyError] = useState(null)\n\n  const [mutate, { loading }] = useMutation(SAVE_GOOGLE_API_KEY_CONFIGURATION)\n\n  const onBlur = (setter, field, state) => {\n    setter(!validateFunc({ [field]: state }, field))\n  }\n\n  const validateInput = () => {\n    let googleApiKeyResult = true\n\n    googleApiKeyResult = !validateFunc(\n      { googleApiKey: formRef.current['input-googleApiKey'].value },\n      'googleApiKey'\n    )\n\n    setGoogleApiKeyError(googleApiKeyResult)\n\n    return googleApiKeyResult\n  }\n\n  const classes = useStyles()\n  const globalClasses = useGlobalStyles()\n\n  return (\n    <Box container className={classes.container}>\n      <Box className={classes.flexRow}>\n        <Box item className={classes.heading}>\n          <Typography variant=\"h6\" className={classes.text}>\n            Google API Key\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box className={classes.form}>\n        <form ref={formRef}>\n          <Box>\n            <Typography className={classes.labelText}>\n              Google API Key\n            </Typography>\n            <Input\n              style={{ marginTop: -1 }}\n              id=\"input-googleApiKey\"\n              name=\"input-googleApiKey\"\n              placeholder=\"Google API Key\"\n              defaultValue={googleApiKey}\n              type=\"password\"\n              onBlur={event =>\n                onBlur(setGoogleApiKeyError, 'googleApiKey', event.target.value)\n              }\n              disableUnderline\n              className={[\n                globalClasses.input,\n                googleApiKeyError === false\n                  ? globalClasses.inputError\n                  : googleApiKeyError === true\n                  ? globalClasses.inputSuccess\n                  : ''\n              ]}\n            />\n          </Box>\n          <Box>\n            <Button\n              className={globalClasses.button}\n              disabled={loading}\n              onClick={e => {\n                e.preventDefault()\n                if (validateInput() && !loading) {\n                  mutate({\n                    variables: {\n                      configurationInput: {\n                        googleApiKey:\n                          formRef.current['input-googleApiKey'].value\n                      }\n                    }\n                  })\n                }\n              }}>\n              SAVE\n            </Button>\n          </Box>\n        </form>\n      </Box>\n    </Box>\n  )\n}\n\nexport default withTranslation()(GoogleApiKeyConfiguration)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}