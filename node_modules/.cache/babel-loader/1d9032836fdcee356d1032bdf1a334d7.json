{"ast":null,"code":"import { fill, loadModule, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\n/** Tracing integration for node-mysql package */\nvar Mysql = /** @class */function () {\n  function Mysql() {\n    /**\n     * @inheritDoc\n     */\n    this.name = Mysql.id;\n  }\n  /**\n   * @inheritDoc\n   */\n  Mysql.prototype.setupOnce = function (_, getCurrentHub) {\n    var pkg = loadModule('mysql/lib/Connection.js');\n    if (!pkg) {\n      IS_DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig) {\n      return function (options, values, callback) {\n        var _a, _b;\n        var scope = getCurrentHub().getScope();\n        var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n        var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n          description: typeof options === 'string' ? options : options.sql,\n          op: 'db'\n        });\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            callback(err, result, fields);\n          });\n        }\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            values(err, result, fields);\n          });\n        }\n        return orig.call(this, options, values, callback);\n      };\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  Mysql.id = 'Mysql';\n  return Mysql;\n}();\nexport { Mysql };","map":{"version":3,"names":["fill","loadModule","logger","IS_DEBUG_BUILD","Mysql","name","id","prototype","setupOnce","_","getCurrentHub","pkg","error","orig","options","values","callback","scope","getScope","parentSpan","_a","getSpan","span","_b","startChild","description","sql","op","call","err","result","fields","finish"],"sources":["../../../../../src/integrations/node/mysql.ts"],"sourcesContent":["import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration } from '@sentry/types';\nimport { fill, loadModule, logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from '../../flags';\n\ninterface MysqlConnection {\n  createQuery: () => void;\n}\n\n/** Tracing integration for node-mysql package */\nexport class Mysql implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mysql';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Mysql.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const pkg = loadModule<MysqlConnection>('mysql/lib/Connection.js');\n\n    if (!pkg) {\n      IS_DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig: () => void) {\n      return function (this: unknown, options: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof options === 'string' ? options : (options as { sql: string }).sql,\n          op: 'db',\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  }\n}\n"],"mappings":"AAEA,SAASA,IAAI,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAExD,SAASC,cAAc,QAAQ,aAAa;AAM5C;AACA,IAAAC,KAAA;EAAA,SAAAA,MAAA;IAME;;;IAGO,KAAAC,IAAI,GAAWD,KAAK,CAACE,EAAE;EA4ChC;EA1CE;;;EAGOF,KAAA,CAAAG,SAAA,CAAAC,SAAS,GAAhB,UAAiBC,CAAqC,EAAEC,aAAwB;IAC9E,IAAMC,GAAG,GAAGV,UAAU,CAAkB,yBAAyB,CAAC;IAElE,IAAI,CAACU,GAAG,EAAE;MACRR,cAAc,IAAID,MAAM,CAACU,KAAK,CAAC,0DAA0D,CAAC;MAC1F;;IAGF;IACA;IACA;IACA;IACAZ,IAAI,CAACW,GAAG,EAAE,aAAa,EAAE,UAAUE,IAAgB;MACjD,OAAO,UAAyBC,OAAgB,EAAEC,MAAe,EAAEC,QAAiB;;QAClF,IAAMC,KAAK,GAAGP,aAAa,EAAE,CAACQ,QAAQ,EAAE;QACxC,IAAMC,UAAU,IAAAC,EAAA,GAAGH,KAAK,cAAAG,EAAA,uBAAAA,EAAA,CAAEC,OAAO,EAAE;QACnC,IAAMC,IAAI,IAAAC,EAAA,GAAGJ,UAAU,cAAAI,EAAA,uBAAAA,EAAA,CAAEC,UAAU,CAAC;UAClCC,WAAW,EAAE,OAAOX,OAAO,KAAK,QAAQ,GAAGA,OAAO,GAAIA,OAA2B,CAACY,GAAG;UACrFC,EAAE,EAAE;SACL,CAAC;QAEF,IAAI,OAAOX,QAAQ,KAAK,UAAU,EAAE;UAClC,OAAOH,IAAI,CAACe,IAAI,CAAC,IAAI,EAAEd,OAAO,EAAEC,MAAM,EAAE,UAAUc,GAAU,EAAEC,MAAe,EAAEC,MAAe;;YAC5F,CAAAX,EAAA,GAAAE,IAAI,cAAAF,EAAA,uBAAAA,EAAA,CAAEY,MAAM;YACZhB,QAAQ,CAACa,GAAG,EAAEC,MAAM,EAAEC,MAAM,CAAC;UAC/B,CAAC,CAAC;;QAGJ,IAAI,OAAOhB,MAAM,KAAK,UAAU,EAAE;UAChC,OAAOF,IAAI,CAACe,IAAI,CAAC,IAAI,EAAEd,OAAO,EAAE,UAAUe,GAAU,EAAEC,MAAe,EAAEC,MAAe;;YACpF,CAAAX,EAAA,GAAAE,IAAI,cAAAF,EAAA,uBAAAA,EAAA,CAAEY,MAAM;YACZjB,MAAM,CAACc,GAAG,EAAEC,MAAM,EAAEC,MAAM,CAAC;UAC7B,CAAC,CAAC;;QAGJ,OAAOlB,IAAI,CAACe,IAAI,CAAC,IAAI,EAAEd,OAAO,EAAEC,MAAM,EAAEC,QAAQ,CAAC;MACnD,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAnDD;;;EAGcZ,KAAA,CAAAE,EAAE,GAAW,OAAO;EAiDpC,OAAAF,KAAC;CAAA,CArDD;SAAaA,KAAK"},"metadata":{},"sourceType":"module"}