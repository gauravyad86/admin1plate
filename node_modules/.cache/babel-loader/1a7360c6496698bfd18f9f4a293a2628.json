{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { fill, getFunctionName, getGlobalObject, getOriginalFunction } from '@sentry/utils';\nimport { wrap } from '../helpers';\nvar DEFAULT_EVENT_TARGET = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */function () {\n  /**\n   * @inheritDoc\n   */\n  function TryCatch(options) {\n    /**\n     * @inheritDoc\n     */\n    this.name = TryCatch.id;\n    this._options = __assign({\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true\n    }, options);\n  }\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  TryCatch.prototype.setupOnce = function () {\n    var global = getGlobalObject();\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  TryCatch.id = 'TryCatch';\n  return TryCatch;\n}();\nexport { TryCatch };\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: {\n          function: getFunctionName(original)\n        },\n        handled: true,\n        type: 'instrument'\n      }\n    });\n    return original.apply(this, args);\n  };\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [wrap(callback, {\n      mechanism: {\n        data: {\n          function: 'requestAnimationFrame',\n          handler: getFunctionName(original)\n        },\n        handled: true,\n        type: 'instrument'\n      }\n    })]);\n  };\n}\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n    xmlHttpRequestProps.forEach(function (prop) {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original)\n              },\n              handled: true,\n              type: 'instrument'\n            }\n          };\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n    return originalSend.apply(this, args);\n  };\n}\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var global = getGlobalObject();\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  var proto = global[target] && global[target].prototype;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n  fill(proto, 'addEventListener', function (original) {\n    return function (eventName, fn, options) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target: target\n              },\n              handled: true,\n              type: 'instrument'\n            }\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n      return original.apply(this, [eventName,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      wrap(fn, {\n        mechanism: {\n          data: {\n            function: 'addEventListener',\n            handler: getFunctionName(fn),\n            target: target\n          },\n          handled: true,\n          type: 'instrument'\n        }\n      }), options]);\n    };\n  });\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener) {\n    return function (eventName, fn, options) {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      var wrappedEventHandler = fn;\n      try {\n        var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch (e) {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n    };\n  });\n}","map":{"version":3,"names":["fill","getFunctionName","getGlobalObject","getOriginalFunction","wrap","DEFAULT_EVENT_TARGET","TryCatch","options","name","id","_options","__assign","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","setTimeout","prototype","setupOnce","global","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","Array","isArray","forEach","_wrapEventTarget","original","args","_i","arguments","length","originalCallback","mechanism","data","function","handled","type","apply","callback","handler","originalSend","xhr","xmlHttpRequestProps","prop","wrapOptions","originalFunction","target","proto","hasOwnProperty","eventName","fn","handleEvent","bind","err","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","__sentry_wrapped__","call","e"],"sources":["../../../../src/integrations/trycatch.ts"],"sourcesContent":["import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getGlobalObject, getOriginalFunction } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\n/** JSDoc */\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /** JSDoc */\n  private readonly _options: TryCatchOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<TryCatchOptions>) {\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    const global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n}\n\n/** JSDoc */\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const global = getGlobalObject() as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = global[target] && global[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: () => void): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}