{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var bindReporter = function (callback, metric, reportAllChanges) {\n  var prevValue;\n  return function (forceReport) {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["bindReporter","callback","metric","reportAllChanges","prevValue","forceReport","value","delta","undefined"],"sources":["../../../../../../src/browser/web-vitals/lib/bindReporter.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Metric, ReportHandler } from '../types';\n\nexport const bindReporter = (\n  callback: ReportHandler,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMA,YAAY,GAAG,SAAAA,CAC1BC,QAAuB,EACvBC,MAAc,EACdC,gBAA0B;EAE1B,IAAIC,SAAiB;EACrB,OAAO,UAACC,WAAqB;IAC3B,IAAIH,MAAM,CAACI,KAAK,IAAI,CAAC,EAAE;MACrB,IAAID,WAAW,IAAIF,gBAAgB,EAAE;QACnCD,MAAM,CAACK,KAAK,GAAGL,MAAM,CAACI,KAAK,IAAIF,SAAS,IAAI,CAAC,CAAC;QAE9C;QACA;QACA;QACA;QACA,IAAIF,MAAM,CAACK,KAAK,IAAIH,SAAS,KAAKI,SAAS,EAAE;UAC3CJ,SAAS,GAAGF,MAAM,CAACI,KAAK;UACxBL,QAAQ,CAACC,MAAM,CAAC;;;;EAIxB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}