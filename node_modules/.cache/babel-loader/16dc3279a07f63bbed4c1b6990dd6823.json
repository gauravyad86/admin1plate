{"ast":null,"code":"export { addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, startTransaction, setContext, setExtra, setExtras, setTag, setTags, setUser, withScope } from '@sentry/minimal';\nexport { addGlobalEventProcessor, getCurrentHub, getHubFromCarrier, Hub, makeMain, Scope, Session } from '@sentry/hub';\nexport {\n// eslint-disable-next-line deprecation/deprecation\nAPI, getEnvelopeEndpointWithUrlEncodedAuth, getStoreEndpointWithUrlEncodedAuth, getRequestHeaders, initAPIDetails, getReportDialogEndpoint } from './api';\nexport { BaseClient } from './baseclient';\nexport { BaseBackend } from './basebackend';\nexport { eventToSentryRequest, sessionToSentryRequest } from './request';\nexport { initAndBind } from './sdk';\nexport { NoopTransport } from './transports/noop';\nexport { createTransport } from './transports/base';\nexport { SDK_VERSION } from './version';\nimport * as Integrations from './integrations';\nexport { Integrations };","map":{"version":3,"names":["addBreadcrumb","captureException","captureEvent","captureMessage","configureScope","startTransaction","setContext","setExtra","setExtras","setTag","setTags","setUser","withScope","addGlobalEventProcessor","getCurrentHub","getHubFromCarrier","Hub","makeMain","Scope","Session","API","getEnvelopeEndpointWithUrlEncodedAuth","getStoreEndpointWithUrlEncodedAuth","getRequestHeaders","initAPIDetails","getReportDialogEndpoint","BaseClient","BaseBackend","eventToSentryRequest","sessionToSentryRequest","initAndBind","NoopTransport","createTransport","SDK_VERSION","Integrations"],"sources":["../../src/index.ts"],"sourcesContent":["export {\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  startTransaction,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n} from '@sentry/minimal';\nexport { addGlobalEventProcessor, getCurrentHub, getHubFromCarrier, Hub, makeMain, Scope, Session } from '@sentry/hub';\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  API,\n  APIDetails,\n  getEnvelopeEndpointWithUrlEncodedAuth,\n  getStoreEndpointWithUrlEncodedAuth,\n  getRequestHeaders,\n  initAPIDetails,\n  getReportDialogEndpoint,\n} from './api';\nexport { BaseClient } from './baseclient';\nexport { BackendClass, BaseBackend } from './basebackend';\nexport { eventToSentryRequest, sessionToSentryRequest } from './request';\nexport { initAndBind, ClientClass } from './sdk';\nexport { NoopTransport } from './transports/noop';\nexport {\n  BaseTransportOptions,\n  createTransport,\n  NewTransport,\n  TransportMakeRequestResponse,\n  TransportRequest,\n  TransportRequestExecutor,\n} from './transports/base';\nexport { SDK_VERSION } from './version';\n\nimport * as Integrations from './integrations';\n\nexport { Integrations };\n"],"mappings":"AAAA,SACEA,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,MAAM,EACNC,OAAO,EACPC,OAAO,EACPC,SAAS,QACJ,iBAAiB;AACxB,SAASC,uBAAuB,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,QAAQ,aAAa;AACtH;AACE;AACAC,GAAG,EAEHC,qCAAqC,EACrCC,kCAAkC,EAClCC,iBAAiB,EACjBC,cAAc,EACdC,uBAAuB,QAClB,OAAO;AACd,SAASC,UAAU,QAAQ,cAAc;AACzC,SAAuBC,WAAW,QAAQ,eAAe;AACzD,SAASC,oBAAoB,EAAEC,sBAAsB,QAAQ,WAAW;AACxE,SAASC,WAAW,QAAqB,OAAO;AAChD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAEEC,eAAe,QAKV,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,WAAW;AAEvC,OAAO,KAAKC,YAAY,MAAM,gBAAgB;AAE9C,SAASA,YAAY"},"metadata":{},"sourceType":"module"}