{"ast":null,"code":"import { fill, isThenable, loadModule, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\n/** Tracing integration for node-postgres package */\nvar Postgres = /** @class */function () {\n  function Postgres(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n    this.name = Postgres.id;\n    this._usePgNative = !!options.usePgNative;\n  }\n  /**\n   * @inheritDoc\n   */\n  Postgres.prototype.setupOnce = function (_, getCurrentHub) {\n    var _a;\n    var pkg = loadModule('pg');\n    if (!pkg) {\n      IS_DEBUG_BUILD && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n    if (this._usePgNative && !((_a = pkg.native) === null || _a === void 0 ? void 0 : _a.Client)) {\n      IS_DEBUG_BUILD && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n    var Client = (this._usePgNative ? pkg.native : pkg).Client;\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function (orig) {\n      return function (config, values, callback) {\n        var _a, _b, _c;\n        var scope = getCurrentHub().getScope();\n        var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n        var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n          description: typeof config === 'string' ? config : config.text,\n          op: 'db'\n        });\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            callback(err, result);\n          });\n        }\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            values(err, result);\n          });\n        }\n        var rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n        if (isThenable(rv)) {\n          return rv.then(function (res) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            return res;\n          });\n        }\n        (_c = span) === null || _c === void 0 ? void 0 : _c.finish();\n        return rv;\n      };\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  Postgres.id = 'Postgres';\n  return Postgres;\n}();\nexport { Postgres };","map":{"version":3,"names":["fill","isThenable","loadModule","logger","IS_DEBUG_BUILD","Postgres","options","name","id","_usePgNative","usePgNative","prototype","setupOnce","_","getCurrentHub","pkg","error","_a","native","Client","orig","config","values","callback","scope","getScope","parentSpan","getSpan","span","_b","startChild","description","text","op","call","err","result","finish","rv","then","res","_c"],"sources":["../../../../../src/integrations/node/postgres.ts"],"sourcesContent":["import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from '../../flags';\n\ninterface PgClient {\n  prototype: {\n    query: () => void | Promise<unknown>;\n  };\n}\n\ninterface PgOptions {\n  usePgNative?: boolean;\n}\n\n/** Tracing integration for node-postgres package */\nexport class Postgres implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Postgres';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Postgres.id;\n\n  private _usePgNative: boolean;\n\n  public constructor(options: PgOptions = {}) {\n    this._usePgNative = !!options.usePgNative;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const pkg = loadModule<{ Client: PgClient; native: { Client: PgClient } }>('pg');\n\n    if (!pkg) {\n      IS_DEBUG_BUILD && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    if (this._usePgNative && !pkg.native?.Client) {\n      IS_DEBUG_BUILD && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    const { Client } = this._usePgNative ? pkg.native : pkg;\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function (orig: () => void | Promise<unknown>) {\n      return function (this: unknown, config: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof config === 'string' ? config : (config as { text: string }).text,\n          op: 'db',\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err: Error, result: unknown) {\n            span?.finish();\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err: Error, result: unknown) {\n            span?.finish();\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return rv.then((res: unknown) => {\n            span?.finish();\n            return res;\n          });\n        }\n\n        span?.finish();\n        return rv;\n      };\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}