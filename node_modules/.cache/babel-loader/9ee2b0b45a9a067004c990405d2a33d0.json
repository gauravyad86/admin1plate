{"ast":null,"code":"import { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * @inheritdoc\n */\nvar Session = /** @class */function () {\n  function Session(context) {\n    this.errors = 0;\n    this.sid = uuid4();\n    this.duration = 0;\n    this.status = 'ok';\n    this.init = true;\n    this.ignoreDuration = false;\n    // Both timestamp and started are in seconds since the UNIX epoch.\n    var startingTime = timestampInSeconds();\n    this.timestamp = startingTime;\n    this.started = startingTime;\n    if (context) {\n      this.update(context);\n    }\n  }\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  Session.prototype.update = function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n    if (context.user) {\n      if (!this.ipAddress && context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n      if (!this.did && !context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n    this.timestamp = context.timestamp || timestampInSeconds();\n    if (context.ignoreDuration) {\n      this.ignoreDuration = context.ignoreDuration;\n    }\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (!this.did && context.did) {\n      this.did = \"\" + context.did;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (this.ignoreDuration) {\n      this.duration = undefined;\n    } else if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      var duration = this.timestamp - this.started;\n      this.duration = duration >= 0 ? duration : 0;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (!this.ipAddress && context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (!this.userAgent && context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  };\n  /** JSDoc */\n  Session.prototype.close = function (status) {\n    if (status) {\n      this.update({\n        status: status\n      });\n    } else if (this.status === 'ok') {\n      this.update({\n        status: 'exited'\n      });\n    } else {\n      this.update();\n    }\n  };\n  /** JSDoc */\n  Session.prototype.toJSON = function () {\n    return dropUndefinedKeys({\n      sid: \"\" + this.sid,\n      init: this.init,\n      // Make sure that sec is converted to ms for date constructor\n      started: new Date(this.started * 1000).toISOString(),\n      timestamp: new Date(this.timestamp * 1000).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? \"\" + this.did : undefined,\n      duration: this.duration,\n      attrs: {\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent\n      }\n    });\n  };\n  return Session;\n}();\nexport { Session };","map":{"version":3,"names":["dropUndefinedKeys","timestampInSeconds","uuid4","Session","context","errors","sid","duration","status","init","ignoreDuration","startingTime","timestamp","started","update","prototype","user","ipAddress","ip_address","did","id","email","username","length","undefined","release","environment","userAgent","close","toJSON","Date","toISOString","attrs","user_agent"],"sources":["../../src/session.ts"],"sourcesContent":["import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number;\n  public started: number;\n  public duration?: number = 0;\n  public status: SessionStatus = 'ok';\n  public environment?: string;\n  public ipAddress?: string;\n  public init: boolean = true;\n  public ignoreDuration: boolean = false;\n\n  public constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    // Both timestamp and started are in seconds since the UNIX epoch.\n    const startingTime = timestampInSeconds();\n    this.timestamp = startingTime;\n    this.started = startingTime;\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  public update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (!this.ipAddress && context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!this.did && !context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || timestampInSeconds();\n    if (context.ignoreDuration) {\n      this.ignoreDuration = context.ignoreDuration;\n    }\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (!this.did && context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (this.ignoreDuration) {\n      this.duration = undefined;\n    } else if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      const duration = this.timestamp - this.started;\n      this.duration = duration >= 0 ? duration : 0;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (!this.ipAddress && context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (!this.userAgent && context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  public close(status?: Exclude<SessionStatus, 'ok'>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === 'ok') {\n      this.update({ status: 'exited' });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  public toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration?: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: this.init,\n      // Make sure that sec is converted to ms for date constructor\n      started: new Date(this.started * 1000).toISOString(),\n      timestamp: new Date(this.timestamp * 1000).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: {\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      },\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}