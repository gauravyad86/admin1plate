{"ast":null,"code":"import { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(discarded_events, dsn, timestamp) {\n  var clientReportItem = [{\n    type: 'client_report'\n  }, {\n    timestamp: timestamp || dateTimestampInSeconds(),\n    discarded_events: discarded_events\n  }];\n  return createEnvelope(dsn ? {\n    dsn: dsn\n  } : {}, [clientReportItem]);\n}","map":{"version":3,"names":["createEnvelope","dateTimestampInSeconds","createClientReportEnvelope","discarded_events","dsn","timestamp","clientReportItem","type"],"sources":["../../src/clientreport.ts"],"sourcesContent":["import { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,YAAY;AAC3C,SAASC,sBAAsB,QAAQ,QAAQ;AAE/C;;;;;AAKA,OAAM,SAAUC,0BAA0BA,CACxCC,gBAAkD,EAClDC,GAAY,EACZC,SAAkB;EAElB,IAAMC,gBAAgB,GAAqB,CACzC;IAAEC,IAAI,EAAE;EAAe,CAAE,EACzB;IACEF,SAAS,EAAEA,SAAS,IAAIJ,sBAAsB,EAAE;IAChDE,gBAAgB,EAAAA;GACjB,CACF;EACD,OAAOH,cAAc,CAAuBI,GAAG,GAAG;IAAEA,GAAG,EAAAA;EAAA,CAAE,GAAG,EAAE,EAAE,CAACE,gBAAgB,CAAC,CAAC;AACrF"},"metadata":{},"sourceType":"module"}