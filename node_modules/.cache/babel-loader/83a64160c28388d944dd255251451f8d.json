{"ast":null,"code":"/*\n * Transform string by adding newline after x spaces\n * parameter: String, Number\n * return: String\n */\nconst transformToNewline = function (input) {\n  let spaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var spaceCount = 0;\n  var result = [];\n  var splittedDesc = input.split('');\n  for (let i = 0; i < splittedDesc.length; i++) {\n    result.push(splittedDesc[i]);\n    if (splittedDesc[i] === ' ') {\n      ++spaceCount;\n      if (spaceCount % spaces === 0 && spaceCount !== 0) result.push('\\n');\n    }\n  }\n  return result.join('');\n};\nexport { transformToNewline };","map":{"version":3,"names":["transformToNewline","input","spaces","arguments","length","undefined","spaceCount","result","splittedDesc","split","i","push","join"],"sources":["/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/utils/stringManipulations.js"],"sourcesContent":["/*\n * Transform string by adding newline after x spaces\n * parameter: String, Number\n * return: String\n */\nconst transformToNewline = (input, spaces = 3) => {\n  var spaceCount = 0\n  var result = []\n  var splittedDesc = input.split('')\n  for (let i = 0; i < splittedDesc.length; i++) {\n    result.push(splittedDesc[i])\n    if (splittedDesc[i] === ' ') {\n      ++spaceCount\n      if (spaceCount % spaces === 0 && spaceCount !== 0) result.push('\\n')\n    }\n  }\n  return result.join('')\n}\n\nexport { transformToNewline }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,kBAAkB,GAAG,SAAAA,CAACC,KAAK,EAAiB;EAAA,IAAfC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC3C,IAAIG,UAAU,GAAG,CAAC;EAClB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,YAAY,GAAGP,KAAK,CAACQ,KAAK,CAAC,EAAE,CAAC;EAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,YAAY,CAACJ,MAAM,EAAEM,CAAC,EAAE,EAAE;IAC5CH,MAAM,CAACI,IAAI,CAACH,YAAY,CAACE,CAAC,CAAC,CAAC;IAC5B,IAAIF,YAAY,CAACE,CAAC,CAAC,KAAK,GAAG,EAAE;MAC3B,EAAEJ,UAAU;MACZ,IAAIA,UAAU,GAAGJ,MAAM,KAAK,CAAC,IAAII,UAAU,KAAK,CAAC,EAAEC,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC;IACtE;EACF;EACA,OAAOJ,MAAM,CAACK,IAAI,CAAC,EAAE,CAAC;AACxB,CAAC;AAED,SAASZ,kBAAkB"},"metadata":{},"sourceType":"module"}