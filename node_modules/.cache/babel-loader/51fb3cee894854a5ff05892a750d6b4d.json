{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/components/Configuration/FormEmail/FormEmail.js\",\n  _templateObject,\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { useMutation, gql } from '@apollo/client';\nimport { validateFunc } from '../../../constraints/constraints';\nimport { saveFormEmailConfiguration } from '../../../apollo';\nimport { Box, Typography, Input, Button, CircularProgress } from '@mui/material';\nimport useStyles from '../styles';\nimport useGlobalStyles from '../../../utils/globalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAVE_EMAIL_CONFIGURATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  \", \"\\n\"])), saveFormEmailConfiguration);\nfunction EmailConfiguration(props) {\n  _s();\n  const formRef = useRef();\n  const [email, setEmail] = useState(props.formEmail || '');\n  const [emailError, setEmailError] = useState(null);\n  const [mutate, {\n    loading\n  }] = useMutation(SAVE_EMAIL_CONFIGURATION);\n  const validateInput = () => {\n    const emailErrors = !validateFunc({\n      email: email\n    }, 'email');\n    setEmailError(emailErrors);\n    return emailErrors;\n  };\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    container: true,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.flexRow,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        item: true,\n        className: classes.heading,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.text,\n          children: \"Form Submission Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        ref: formRef,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.labelText,\n            children: \"Form Submission Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              marginTop: -1\n            },\n            id: \"input-email\",\n            name: \"input-email\",\n            placeholder: \"Email address\",\n            type: \"email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            },\n            disableUnderline: true,\n            className: [globalClasses.input, emailError === false ? globalClasses.inputError : emailError === true ? globalClasses.inputSuccess : '']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: globalClasses.button,\n            disabled: loading,\n            onClick: e => {\n              e.preventDefault();\n              if (validateInput()) {\n                mutate({\n                  variables: {\n                    configurationInput: {\n                      formEmail: formRef.current['input-email'].value\n                    }\n                  }\n                }).then(response => {\n                  // Handle successful response\n                  console.log(response);\n                }).catch(error => {\n                  // Handle GraphQL errors\n                  console.error('GraphQL error:', error.message);\n                });\n              }\n            },\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this) : 'SAVE'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailConfiguration, \"MHLtJHrOSYrIInlinOBHRPTUaQ4=\", false, function () {\n  return [useMutation, useStyles, useGlobalStyles];\n});\n_c = EmailConfiguration;\nexport default withTranslation()(EmailConfiguration);\nvar _c;\n$RefreshReg$(_c, \"EmailConfiguration\");","map":{"version":3,"names":["React","useRef","useState","withTranslation","useMutation","gql","validateFunc","saveFormEmailConfiguration","Box","Typography","Input","Button","CircularProgress","useStyles","useGlobalStyles","jsxDEV","_jsxDEV","SAVE_EMAIL_CONFIGURATION","_templateObject","_taggedTemplateLiteral","EmailConfiguration","props","_s","formRef","email","setEmail","formEmail","emailError","setEmailError","mutate","loading","validateInput","emailErrors","classes","globalClasses","container","className","children","flexRow","item","heading","variant","text","fileName","_jsxFileName","lineNumber","columnNumber","form","ref","labelText","style","marginTop","id","name","placeholder","type","value","onChange","e","target","disableUnderline","input","inputError","inputSuccess","button","disabled","onClick","preventDefault","variables","configurationInput","current","then","response","console","log","catch","error","message","size","color","_c","$RefreshReg$"],"sources":["/Users/gauravyadav/Downloads/food-delivery-multivendor-main/enatega-multivendor-admin/src/components/Configuration/FormEmail/FormEmail.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { useMutation, gql } from '@apollo/client'\nimport { validateFunc } from '../../../constraints/constraints'\nimport { saveFormEmailConfiguration } from '../../../apollo'\nimport { Box, Typography, Input, Button, CircularProgress } from '@mui/material'\nimport useStyles from '../styles'\nimport useGlobalStyles from '../../../utils/globalStyles'\n\nconst SAVE_EMAIL_CONFIGURATION = gql`\n  ${saveFormEmailConfiguration}\n`\n\nfunction EmailConfiguration(props) {\n  const formRef = useRef()\n  const [email, setEmail] = useState(props.formEmail || '')\n  const [emailError, setEmailError] = useState(null)\n  const [mutate, { loading }] = useMutation(SAVE_EMAIL_CONFIGURATION)\n\n  const validateInput = () => {\n    const emailErrors = !validateFunc({ email: email }, 'email')\n\n    setEmailError(emailErrors)\n    return emailErrors\n  }\n\n  const classes = useStyles()\n  const globalClasses = useGlobalStyles()\n\n  return (\n    <Box container className={classes.container}>\n      <Box className={classes.flexRow}>\n        <Box item className={classes.heading}>\n          <Typography variant=\"h6\" className={classes.text}>\n            Form Submission Email\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box className={classes.form}>\n        <form ref={formRef}>\n          <Box>\n            <Typography className={classes.labelText}>\n              Form Submission Email\n            </Typography>\n            <Input\n              style={{ marginTop: -1 }}\n              id=\"input-email\"\n              name=\"input-email\"\n              placeholder=\"Email address\"\n              type=\"email\"\n              value={email}\n              onChange={e => {\n                setEmail(e.target.value)\n              }}\n              disableUnderline\n              className={[\n                globalClasses.input,\n                emailError === false\n                  ? globalClasses.inputError\n                  : emailError === true\n                  ? globalClasses.inputSuccess\n                  : ''\n              ]}\n            />\n          </Box>\n          <Box>\n            <Button\n              className={globalClasses.button}\n              disabled={loading}\n              onClick={e => {\n                e.preventDefault()\n                if (validateInput()) {\n                  mutate({\n                    variables: {\n                      configurationInput: {\n                        formEmail: formRef.current['input-email'].value\n                      }\n                    }\n                  })\n                    .then(response => {\n                      // Handle successful response\n                      console.log(response)\n                    })\n                    .catch(error => {\n                      // Handle GraphQL errors\n                      console.error('GraphQL error:', error.message)\n                    })\n                }\n              }}>\n              {loading ? (\n                <CircularProgress size={24} color=\"primary\" />\n              ) : (\n                'SAVE'\n              )}\n            </Button>\n          </Box>\n        </form>\n      </Box>\n    </Box>\n  )\n}\n\nexport default withTranslation()(EmailConfiguration)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}